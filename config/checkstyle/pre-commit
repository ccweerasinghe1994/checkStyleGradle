#!/bin/bash

# get the current branch
BRANCH=$(git rev-parse --abbrev-ref HEAD)

# get the remote default branch
# if the remote default branch is not set, it will be set to master
# you can change the default branch to main or any other branch by changing the value of REMOTE_DEFAULT_BRANCH example: REMOTE_DEFAULT_BRANCH=your_default_branch
REMOTE_DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')

# get the changed files compared to the remote default branch and only the java files
CHANGED_FILES=$(git diff --name-only $REMOTE_DEFAULT_BRANCH...$BRANCH | grep ".java$")

# Find the root directory of the git repository
REPO_ROOT=$(git rev-parse --show-toplevel)

# Construct the path to the checkstyle jar file relative to the repository root
CHECKSTYLE_JAR="$REPO_ROOT/config/checkstyle/checkstyle-10.17.0-all.jar"

# Checkstyle configuration file
CHECKSTYLE_CONFIG="$REPO_ROOT/config/checkstyle/checkstyle.xml"

# Check if there are any Java files changed. If not, exit early.
# if [ -z "$CHANGED_FILES" ]; then
#     echo "No Java files have been changed."
#     exit 0
# fi

# Run the checkstyle command on the changed files and save the output to a variable
# CHECKSTYLE_OUTPUT=$(java -jar "$CHECKSTYLE_JAR" -c "$CHECKSTYLE_CONFIG" $CHANGED_FILES) 
# CHECKSTYLE_EXIT_STATUS=$?


# File containing the checkstyle errors


# Initialize an empty string to accumulate the output
output=""

# Use process substitution to feed the output of the Checkstyle command into the while loop
while IFS= read -r line; do
    if [[ $line =~ \[ERROR\]\ (.*):([0-9]+):([0-9]+):\ (.*)\ \[(.*)\] ]]; then
        filePath=${BASH_REMATCH[1]}
        lineNumber=${BASH_REMATCH[2]}
        columnNumber=${BASH_REMATCH[3]}
        errorMessage=${BASH_REMATCH[4]}
        errorType=${BASH_REMATCH[5]}

        # Convert Windows path to a more generic format
        displayPath=$(echo $filePath | sed 's|\\|/|g')

        # Markdown formatting
        output+="## File: \`$displayPath\`"
        output+="\n- **Line $lineNumber, Column $columnNumber**"
        output+="\n  - **Error**: \`$errorType\`"
        output+="\n  - **Message**: $errorMessage\n"
        # let's make the horizontal line
        output+="---\n"
    fi
done < <(java -jar "$CHECKSTYLE_JAR" -c "$CHECKSTYLE_CONFIG" $CHANGED_FILES)

# Output the formatted report
echo "$output"
exit 1
