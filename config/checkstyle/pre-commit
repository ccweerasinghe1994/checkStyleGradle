# Initialize an empty string to accumulate the output
output=""

# Use process substitution to feed the output of the Checkstyle command into the while loop
while IFS= read -r line; do
    if [[ $line =~ \[ERROR\]\ (.*):([0-9]+):([0-9]+):\ (.*)\ \[(.*)\] ]]; then
        filePath=${BASH_REMATCH[1]}
        lineNumber=${BASH_REMATCH[2]}
        columnNumber=${BASH_REMATCH[3]}
        errorMessage=${BASH_REMATCH[4]}
        errorType=${BASH_REMATCH[5]}

        # Convert Windows path to a more generic format
        displayPath=$(echo $filePath | sed 's|\\|/|g')

        # Markdown formatting
        output+="## File: \`$displayPath\`\n"
        output+="- **Line $lineNumber, Column $columnNumber**\n"
        output+="  - **Error**: \`$errorType\`\n"
        output+="  - **Message**: $errorMessage\n"
        output+="---\n"
    fi
done < <(java -jar "$CHECKSTYLE_JAR" -c "$CHECKSTYLE_CONFIG" $CHANGED_FILES)

# Output the formatted report
echo "$output"
